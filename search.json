[{"path":[]},{"path":"https://fubin1999.github.io/glymotif/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://fubin1999.github.io/glymotif/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://fubin1999.github.io/glymotif/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://fubin1999.github.io/glymotif/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://fubin1999.github.io/glymotif/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@posit.co. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://fubin1999.github.io/glymotif/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://fubin1999.github.io/glymotif/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://fubin1999.github.io/glymotif/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://fubin1999.github.io/glymotif/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://fubin1999.github.io/glymotif/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://fubin1999.github.io/glymotif/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://fubin1999.github.io/glymotif/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to glymotif","title":"Contributing to glymotif","text":"outlines propose change glymotif. detailed discussion contributing tidyverse packages, please see development contributing guide code review principles.","code":""},{"path":"https://fubin1999.github.io/glymotif/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to glymotif","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://fubin1999.github.io/glymotif/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to glymotif","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed). See guide create great issue advice.","code":""},{"path":"https://fubin1999.github.io/glymotif/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to glymotif","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"fubin1999/glymotif\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://fubin1999.github.io/glymotif/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to glymotif","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://fubin1999.github.io/glymotif/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to glymotif","text":"Please note glymotif project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://fubin1999.github.io/glymotif/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 glymotif authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://fubin1999.github.io/glymotif/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with glymotif","title":"Getting help with glymotif","text":"Thanks using glymotif! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://fubin1999.github.io/glymotif/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with glymotif","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty incredible ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://fubin1999.github.io/glymotif/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with glymotif","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://fubin1999.github.io/glymotif/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with glymotif","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://fubin1999.github.io/glymotif/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bin Fu. Author, maintainer.","code":""},{"path":"https://fubin1999.github.io/glymotif/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Fu B (2024). glymotif: Extract glycan motifs glycan structures. R package version 0.0.0.9000, https://fubin1999.github.io/glymotif/.","code":"@Manual{,   title = {glymotif: Extract glycan motifs from glycan structures},   author = {Bin Fu},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://fubin1999.github.io/glymotif/}, }"},{"path":"https://fubin1999.github.io/glymotif/index.html","id":"glymotif-","dir":"","previous_headings":"","what":"Extract glycan motifs from glycan structures","title":"Extract glycan motifs from glycan structures","text":"goal glymotif extract glycan motifs glycan structures. works seemlessly glyrepr glyparse.","code":""},{"path":"https://fubin1999.github.io/glymotif/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extract glycan motifs from glycan structures","text":"can install development version glymotif GitHub :","code":"# install.packages(\"pak\") pak::pak(\"fubin1999/glymotif\")"},{"path":"https://fubin1999.github.io/glymotif/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Extract glycan motifs from glycan structures","text":"Say glycan, … … want check O-Glycan core 1 motif. use motif name directly.","code":"library(glymotif) library(glyparse) (glycan <- parse_iupac_condensed(\"Gal(b1-3)GlcNAc(b1-3)Gal(b1-3)GalNAc(a1-\")) #> Glycan Graph (NE) #> Gal: 2, GalNAc: 1, GlcNAc: 1 #> ------------------ #> GalNAc (a1-) #> └─Gal (b1-3) #>   └─GlcNAc (b1-3) #>     └─Gal (b1-3) has_motif(glycan, \"Gal(b1-3)GalNAc(a1-\", alignment = \"core\") #> [1] TRUE has_motif(glycan, \"O-Glycan core 1\") #> [1] TRUE"},{"path":"https://fubin1999.github.io/glymotif/reference/available_motifs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Available Motifs — available_motifs","title":"Get Available Motifs — available_motifs","text":"function returns names available motifs available package.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/available_motifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Available Motifs — available_motifs","text":"","code":"available_motifs()"},{"path":"https://fubin1999.github.io/glymotif/reference/available_motifs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Available Motifs — available_motifs","text":"character vector motif names.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/available_motifs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Available Motifs — available_motifs","text":"","code":"available_motifs()[1:5] #> [1] \"Blood group H (type 2) - Lewis y\" \"i antigen\"                        #> [3] \"LacdiNAc\"                         \"GT2\"                              #> [5] \"Blood group B (type 1) - Lewis b\""},{"path":"https://fubin1999.github.io/glymotif/reference/get_motif.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Motif Graph — get_motif","title":"Get a Motif Graph — get_motif","text":"function returns motif graph given motif name. handy motif known motif GlycoMotif GlyGen Collection. create custom motif graphs, use glyparse::parse_iupac_condensed().","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/get_motif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Motif Graph — get_motif","text":"","code":"get_motif(name)"},{"path":"https://fubin1999.github.io/glymotif/reference/get_motif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Motif Graph — get_motif","text":"name character string motif name.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/get_motif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Motif Graph — get_motif","text":"glycan_graph object.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/get_motif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a Motif Graph — get_motif","text":"","code":"get_motif(\"N-Glycan core basic\") #> $graph #> Glycan Graph (NE) #> GlcNAc: 2, Man: 3 #> ------------------ #> GlcNAc #> └─GlcNAc (b1-4) #>   └─Man (b1-4) #>     ├─Man (a1-6) #>     └─Man (a1-3) #>  #> $aglycon #> [1] \"Asn\" #>  #> $alignment #> [1] \"core\" #>  get_motif(\"O-Glycan core 1\") #> $graph #> Glycan Graph (NE) #> Gal: 1, GalNAc: 1 #> ------------------ #> GalNAc (a1-) #> └─Gal (b1-3) #>  #> $aglycon #> [1] \"Ser/Thr\" #>  #> $alignment #> [1] \"core\" #>"},{"path":"https://fubin1999.github.io/glymotif/reference/has_motif.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Glycan has the Given Motif — has_motif","title":"Check if a Glycan has the Given Motif — has_motif","text":"function checks glycan given motif. Technically speaking, performs subgraph isomorphism test determine motif subgraph glycan. Monosaccharides, linkages , substituents considered.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/has_motif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Glycan has the Given Motif — has_motif","text":"","code":"has_motif(   glycan,   motif,   ...,   alignment = \"substructure\",   ignore_linkages = FALSE )"},{"path":"https://fubin1999.github.io/glymotif/reference/has_motif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Glycan has the Given Motif — has_motif","text":"glycan 'glycan_graph' object, IUPAC-condensed structure string. motif 'glycan_graph' object, IUPAC-condensed structure string, known motif name (use available_motifs() see available motifs). ... used. alignment character string. Possible values \"substructure\", \"core\", \"terminal\" \"whole\". See description details. Default \"substructure\". ignore_linkages logical value. TRUE, linkages ignored comparison.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/has_motif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Glycan has the Given Motif — has_motif","text":"logical value indicating glycan motif.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/has_motif.html","id":"graph-mode-and-monosaccharide-type","dir":"Reference","previous_headings":"","what":"Graph mode and monosaccharide type","title":"Check if a Glycan has the Given Motif — has_motif","text":"glycan motif 'glycan_graph' objects (see glyrepr::as_glycan_graph()). can either \"NE\" \"DN\" glycan graphs (can different). Also, can different monosaccharide types (\"concrete\", \"generic\" \"simple\", see glyrepr::decide_mono_type()). However, monosaccharide type glycan obscurer motif, raise error. example, \"concrete\" glycan can \"generic\" motif, vice versa.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/has_motif.html","id":"linkages","dir":"Reference","previous_headings":"","what":"Linkages","title":"Check if a Glycan has the Given Motif — has_motif","text":"Obscure linkages (e.g. \"??-?\") allowed motif graph (see glyrepr::possible_linkages()). \"?\" motif graph means \"anything OK\", match linkage glycan graph. However, \"?\" glycan graph match \"?\" motif graph. can set ignore_linkages = TRUE ignore linkages comparison. motifs glycans can \"half-linkage\" reducing end, e.g. \"GlcNAc(b1-\". half linkage motif matched linkage glycan, half linkage glycan. e.g. Glycan \"GlcNAc(b1-4)Gal(a1-\" \"GlcNAc(b1-\" \"Gal(a1-\" motifs.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/has_motif.html","id":"alignment","dir":"Reference","previous_headings":"","what":"Alignment","title":"Check if a Glycan has the Given Motif — has_motif","text":"According GlycoMotif database, motif can classified four alignment types: \"substructure\": motif can anywhere glycan. default. See substructure details. \"core\": motif must align least one connected substructure (subtree) reducing end glycan. See glycan core details. \"terminal\": motif must align least one connected substructure (subtree) nonreducing end glycan. See nonreducing end details. \"whole\": motif must align entire glycan. See whole-glycan details.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/has_motif.html","id":"substituents","dir":"Reference","previous_headings":"","what":"Substituents","title":"Check if a Glycan has the Given Motif — has_motif","text":"Substituents (e.g. \"Ac\", \"SO3\") matched strict mode. \"Neu5Ac-9Ac\" match \"Neu5Ac-9Ac\" \"Neu5Ac\", \"Neu5Ac\" match \"Neu5Ac-9Ac\". Obscure linkage motif match linkage glycan. e.g. Motif \"Neu5Ac-?Ac\" match \"Neu5Ac-9Ac\" glycan.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/has_motif.html","id":"implementation","dir":"Reference","previous_headings":"","what":"Implementation","title":"Check if a Glycan has the Given Motif — has_motif","text":"hood, function uses igraph::graph.get.subisomorphisms.vf2() get possible subgraph isomorphisms glycan motif. color vertex attributes added graphs distinguish monosaccharides. possible matches, function checks following: Alignment: using alignment_check() Substituents: using substituent_check() Linkages: using linkage_check() Anomer: using anomer_check() function returns TRUE matches pass checks.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/has_motif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a Glycan has the Given Motif — has_motif","text":"","code":"library(glyparse) library(glyrepr)  (glycan <- o_glycan_core_2(mode = \"ne\", mono_type = \"concrete\")) #> Glycan Graph (NE) #> Gal: 1, GalNAc: 1, GlcNAc: 1 #> ------------------ #> GalNAc (a1-) #> ├─Gal (b1-3) #> └─GlcNAc (b1-6)  # The glycan has the motif \"Gal(b1-3)GalNAc\" has_motif(glycan, \"Gal(b1-3)GalNAc\") #> [1] TRUE  # But not \"Gal(b1-4)GalNAc\" (wrong linkage) has_motif(glycan, \"Gal(b1-4)GalNAc\") #> [1] FALSE  # Set `ignore_linkages` to `TRUE` to ignore linkages has_motif(glycan, \"Gal(b1-4)GalNAc\", ignore_linkages = TRUE) #> [1] TRUE  # Different monosaccharide types are allowed has_motif(glycan, \"Hex(b1-3)HexNAc\") #> [1] TRUE  # However, the monosaccharide type of `glycan` cannot be obscurer than that of `motif` glycan_simple <- convert_glycan_mono_type(glycan, \"simple\") try(has_motif(glycan_simple, \"Gal(b1-3)GalNAc\")) #> Error in ensure_glycan_mono_type(glycan, motif) :  #>   The monosaccharide type of `glycan` cannot be obscurer than `motif`. #> ✖ \"simple\" is obscurer than \"concrete\".  # Obscure linkages in the `motif` graph are allowed has_motif(glycan, \"Gal(b1-?)GalNAc\") #> [1] TRUE  # However, obscure linkages in `glycan` will only match \"?\" in the `motif` graph glycan_2 <- parse_iupac_condensed(\"Gal(b1-?)[GlcNAc(b1-6)]GalNAc\") has_motif(glycan_2, \"Gal(b1-3)GalNAc\") #> [1] FALSE has_motif(glycan_2, \"Gal(b1-?)GalNAc\") #> [1] TRUE  # The anomer of the motif will be matched to linkages in the glycan has_motif(glycan_2, \"GlcNAc(b1-\") #> [1] TRUE  # Alignment types # The default type is \"substructure\", which means the motif can be anywhere in the glycan. # Other options include \"core\", \"terminal\" and \"whole\". glycan_3 <- parse_iupac_condensed(\"Gal(a1-3)Gal(a1-4)Gal(a1-6)Gal\") motifs <- c(   \"Gal(a1-3)Gal(a1-4)Gal(a1-6)Gal\",   \"Gal(a1-3)Gal(a1-4)Gal\",            \"Gal(a1-4)Gal(a1-6)Gal\",            \"Gal(a1-4)Gal\" )  purrr::map_lgl(motifs, ~ has_motif(glycan_3, .x, alignment = \"whole\")) #> [1]  TRUE FALSE FALSE FALSE purrr::map_lgl(motifs, ~ has_motif(glycan_3, .x, alignment = \"core\")) #> [1]  TRUE FALSE  TRUE FALSE purrr::map_lgl(motifs, ~ has_motif(glycan_3, .x, alignment = \"terminal\")) #> [1]  TRUE  TRUE FALSE FALSE purrr::map_lgl(motifs, ~ has_motif(glycan_3, .x, alignment = \"substructure\")) #> [1] TRUE TRUE TRUE TRUE  # Substituents glycan_4 <- \"Neu5Ac9Ac(a2-3)Gal(b1-4)GlcNAc\" glycan_5 <- \"Neu5Ac(a2-3)Gal(b1-4)GlcNAc\"  has_motif(glycan_4, glycan_5) #> [1] FALSE has_motif(glycan_5, glycan_4) #> [1] FALSE has_motif(glycan_4, glycan_4) #> [1] TRUE has_motif(glycan_5, glycan_5) #> [1] TRUE"},{"path":"https://fubin1999.github.io/glymotif/reference/has_motifs.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Glycan have the Given Motifs — has_motifs","title":"Check if a Glycan have the Given Motifs — has_motifs","text":"vectorized versions has_motif(). checks glycan given motifs, known motifs GlycoMotif GlyGen Collection motifs missing. logical vector returned. Names motifs preserved names output logical vectors. names provided, input character vector, names vector .","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/has_motifs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Glycan have the Given Motifs — has_motifs","text":"","code":"has_motifs(   glycan,   motifs = NULL,   ...,   alignments = \"substructure\",   ignore_linkages = FALSE )"},{"path":"https://fubin1999.github.io/glymotif/reference/has_motifs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Glycan have the Given Motifs — has_motifs","text":"glycan 'glycan_graph' object, IUPAC-condensed structure string. motifs list 'glycan_graph' objects, character vector IUPAC-condensed structure strings, character vector known motif names. ... Ignored. alignments character vector alignment names motifs, either length motifs, single character string. \"substructure\", \"core\", \"terminal\", \"whole\". Default \"substructure\". provided motifs known motif names missing, alignments GlycoMotif GlyGen Collection used. ignore_linkages logical value. TRUE, linkages ignored comparison.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/has_motifs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Glycan have the Given Motifs — has_motifs","text":"logical vector, indicating glycan motifs.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/has_motifs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if a Glycan have the Given Motifs — has_motifs","text":"","code":"library(glyparse)  # Check if a glycan has the given motifs using names. # Note that the `motifs` vector will become names of the result vector. glycan <- \"Gal(b1-3)GlcNAc(b1-3)Gal(b1-3)GalNAc(a1-\" has_motifs(glycan, c(\"O-Glycan core 1\", \"O-Glycan core 2\")) #> O-Glycan core 1 O-Glycan core 2  #>            TRUE           FALSE   # Using IUPAC-condensed structure strings. # Note that names of `motifs` are preserved in the result vector. motifs <- c(M1 = \"Gal(b1-3)GalNAc(a1-\", M2 = \"GlcNAc(b1-4)GlcNAc(a1-\") has_motifs(glycan, motifs) #>    M1    M2  #>  TRUE FALSE   # Or using 'glycan_graph' objects. motifs <- list(   M1 = parse_iupac_condensed(\"Gal(b1-3)GalNAc(a1-\"),   M2 = parse_iupac_condensed(\"GlcNAc(b1-4)GlcNAc(a1-\") ) has_motifs(glycan, motifs) #>    M1    M2  #>  TRUE FALSE   # If motifs are missing, use all known motifs in the # GlycoMotif GlyGen Collection. has_motifs(glycan)[1:5] #> Blood group H (type 2) - Lewis y                        i antigen  #>                            FALSE                            FALSE  #>                         LacdiNAc                              GT2  #>                            FALSE                            FALSE  #> Blood group B (type 1) - Lewis b  #>                            FALSE"},{"path":"https://fubin1999.github.io/glymotif/reference/have_motif.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if these Glycans have the Given Motif — have_motif","title":"Check if these Glycans have the Given Motif — have_motif","text":"vectorized version has_motif(). checks list glycans (character vector IUPAC-condensed structure strings) given motif. logical vector returned. Names glycans preserved names output logical vectors. names provided, input character vector, names vector .","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/have_motif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if these Glycans have the Given Motif — have_motif","text":"","code":"have_motif(   glycans,   motif,   ...,   alignment = \"substructure\",   ignore_linkages = FALSE )"},{"path":"https://fubin1999.github.io/glymotif/reference/have_motif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if these Glycans have the Given Motif — have_motif","text":"glycans list 'glycan_graph' objects, character vector IUPAC-condensed structure strings. motif 'glycan_graph' object, IUPAC-condensed structure string, known motif name. ... Ignored. alignment character string alignment name motif. \"substructure\", \"core\", \"terminal\", \"whole\". Default \"substructure\". provided motif known motif name, alignment GlycoMotif GlyGen Collection used. ignore_linkages logical value. TRUE, linkages ignored comparison.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/have_motif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if these Glycans have the Given Motif — have_motif","text":"logical vector, indicating glycans motif.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/have_motif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if these Glycans have the Given Motif — have_motif","text":"","code":"glycan <- c(G1 = \"Gal(b1-3)GlcNAc\", G2 = \"Man(b1-4)GlcNAc\", G3 = \"GlcNAc\") have_motif(glycan, \"Gal\") #>    G1    G2    G3  #>  TRUE FALSE FALSE"},{"path":"https://fubin1999.github.io/glymotif/reference/is_known_motif.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a Motif is Known — is_known_motif","title":"Check if a Motif is Known — is_known_motif","text":"function checks motif known motif GlycoMotif GlyGen Collection.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/is_known_motif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a Motif is Known — is_known_motif","text":"","code":"is_known_motif(name)"},{"path":"https://fubin1999.github.io/glymotif/reference/is_known_motif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a Motif is Known — is_known_motif","text":"name character string motif name.","code":""},{"path":"https://fubin1999.github.io/glymotif/reference/is_known_motif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a Motif is Known — is_known_motif","text":"logical value.","code":""}]
